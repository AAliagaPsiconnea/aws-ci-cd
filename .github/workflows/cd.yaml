name: CD Pipeline
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - id: whoami
        run: |
          ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          echo "account=$ACCOUNT" >> "$GITHUB_OUTPUT"

      - id: registry
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ACCOUNT: ${{ steps.whoami.outputs.account }}
        run: |
          REGISTRY="${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          echo "value=$REGISTRY" >> "$GITHUB_OUTPUT"

      - id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
          container-name: laravel-app
          image: ${{ steps.registry.outputs.value }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - id: debug-taskdef
        run: |
          echo "Rendered task definition file: ${{ steps.render-task-definition.outputs.task-definition }}"

      - uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
