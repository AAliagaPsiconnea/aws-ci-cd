name: CI Pipeline
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.extract-tag.outputs.aws_tag }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - id: whoami
        run: |
          ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          echo "account=$ACCOUNT" >> "$GITHUB_OUTPUT"

      - id: registry
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ACCOUNT: ${{ steps.whoami.outputs.account }}
        run: |
          REGISTRY="${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          echo "value=$REGISTRY" >> "$GITHUB_OUTPUT"

      - id: extract-tag
        run: |
          # Extract version from release/<tag> branch
          if [[ "${GITHUB_HEAD_REF}" == release/* ]]; then
            TAG="${GITHUB_HEAD_REF#release/}"
          else
            TAG="unknown"
          fi
          echo "aws_tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Using image tag: $TAG"

      - id: ensure-repo
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region "$AWS_REGION" \
          || aws ecr create-repository --repository-name "$ECR_REPOSITORY" --region "$AWS_REGION"

      - id: login-ecr
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          REGISTRY: ${{ steps.registry.outputs.value }}
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
            | docker login --username AWS --password-stdin "$REGISTRY"

      - id: build-and-push
        env:
          REGISTRY: ${{ steps.registry.outputs.value }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ steps.extract-tag.outputs.aws_tag }}
        run: |
          FULL_IMAGE="$REGISTRY/$REPOSITORY:$IMAGE_TAG"
          echo "Building and pushing $FULL_IMAGE"
          docker build -t "$FULL_IMAGE" .
          docker push "$FULL_IMAGE"
          echo "image=$FULL_IMAGE" >> "$GITHUB_OUTPUT"
